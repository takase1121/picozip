on:
  push:
  workflow_dispatch:

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        config:
        # - { os: 'ubuntu-latest' }
        # - { os: 'macos-latest' }
          - { os: 'windows-latest', shell: 'msys2 {0}', type: 'msys2', msystem: 'ucrt64', arch: 'ucrt-x86_64' }
          - { os: 'windows-latest', shell: 'msys2 {0}', type: 'msys2', msystem: 'clang64', arch: 'clang-x86_64' }
          - { os: 'windows-latest', shell: 'msys2 {0}', type: 'msys2', msystem: 'clang32', arch: 'clang-i686' }
          - { os: 'windows-latest', shell: 'msys2 {0}', type: 'msys2', msystem: 'mingw64', arch: 'x86_64' }
          - { os: 'windows-latest', shell: 'msys2 {0}', type: 'msys2', msystem: 'mingw32', arch: 'i686' }
          - { os: 'windows-latest', shell: 'cmd', type: 'msvc', arch: 'x64' }
          - { os: 'windows-latest', shell: 'cmd', type: 'msvc', arch: 'x86' }

    runs-on: ${{ matrix.config.os }}

    defaults:
      run:
        shell: ${{ matrix.config.shell }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        if: matrix.config.type != 'msys2'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup MSVC
        uses: TheMrMilchmann/setup-msvc-dev@v3
        if: matrix.config.type == 'msvc'
        with:
          arch: ${{ matrix.config.arch }}

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        if: matrix.config.type == 'msys2'
        with:
          msystem: ${{ matrix.config.msystem }}
          install: >-
            curl
            git
            mingw-w64-${{ matrix.config.arch }}-python
            mingw-w64-${{ matrix.config.arch }}-python-pip
            mingw-w64-${{ matrix.config.arch }}-cmake
            mingw-w64-${{ matrix.config.arch }}-gcc
            mingw-w64-${{ matrix.config.arch }}-make
            mingw-w64-${{ matrix.config.arch }}-pkg-config
            mingw-w64-${{ matrix.config.arch }}-binutils
            mingw-w64-${{ matrix.config.arch }}-meson
            mingw-w64-${{ matrix.config.arch }}-ninja
            mingw-w64-${{ matrix.config.arch }}-python-jinja
            mingw-w64-${{ matrix.config.arch }}-python-lxml
      
      - name: Install dependencies
        run:  pip3 install meson ninja gcovr

      - name: Configure
        run: meson setup -Dtests=true -Db_coverage=true -Ddefault_library=static builddir

      - name: Compile
        run: meson compile -C builddir
      - name: Test & Coverage
        run: |
          meson test -C builddir --print-errorlogs --no-stdsplit
          ninja -C builddir coverage
        
      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.config.os }}-${{ matrix.config.type }}-${{ matrix.config.arch }}
          path: builddir/meson-logs/coveragereport